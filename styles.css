:root {
    --countyTheme: #005fa2;
    --titleTextColor: whitesmoke;
}

html {
    margin: 0px;
}

body {
    margin: 0px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: whitesmoke;
}

button {
  cursor: pointer;
  border-radius: 3px;
  
  margin: 0 7px 11px 0;

  text-align: center;

  /* so nobody selects the inside text on button */
  user-select: none;

  /* Smoothing out hover using css3 transitions, if not, the pressed button effect looks a bit hard */
  transition: all 0.2s ease;
  background: var(--countyTheme);
  color: var(--titleTextColor);
  box-shadow: 0px 5px #687e00;
}

button:hover {
  background: blue;
  box-shadow: 0px 4px #435100;
  color: var(--titleTextColor);
}
/* Imitate a pressed effect for buttons */
button:active {
  box-shadow: 0px 0px #717a33;
  top: 4px;
}

.header-container {
    height: 6%;
    width: 100%;
    background-color: var(--countyTheme);
    display: flex;
    align-items: center;
    color: var(--titleTextColor);
    /* gap: 10%; */
}

#logo {
    padding-left: 0.5%;
    height: 95%;
}

#app-title {
    padding-left: 0.5%;
}


.header-link {
    float: left;
    padding-right: 1.1rem;
    padding-left: 1.1rem;
    color: var(--titleTextColor);
    font-weight: bold;
    text-decoration: none;
    margin-top: 3%;
    -webkit-transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    -moz-transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    -ms-transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    border-bottom: 0.5px solid var(--countyTheme);
}

.header-link:hover {
    color: #000;
    text-decoration: none;
}

.main {
    height: 90%;
    display: flex;
    /* justify-content: space-evenly; */
    align-items: center;
}

.map-main {
    height: 100%;
    width: 70%;
    display: flex;
    flex-direction: column;
    /* justify-content: space-between; */
    align-items: center;
}

#viewDiv {
    border: solid 1px black;
    height: 100%;
    width: 100%;
    margin-left: 10px;
}

.enable-draw > button {
    position: absolute;
    left: 1%;
    top: 28%;
}

#info {
    position: absolute;
    top: 17%;
    left: 10px;
    word-wrap: break-word;
    width: 10%;
    text-align: center;
    padding: 14px;
    border-radius: 5px;
    line-height: 1.5rem;
}

.feature-table-container {
    height: 30%;
    width: 100%;
    display: none;
}

/* CSS FOR LAYER LIST  */

.list-container {
    /* position: absolute;
    top: 80%;
    left: 1%; */
    height: auto;
    text-align: center;
    border-radius: 5%;
}

#toggle-title {
    padding-left: 5px;
}

#active-layer-title {
    padding-left: 5px;
}


.layer-list {
    display: flex;
    width: 100%;
}

.layer-list > button {
    flex: auto;
}

/* Style the buttons that are used to open the tab content */
.layer-list button {
    background-color: inherit;
    float: left;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
    border-radius: 5%;
  }
  
  /* Change background color of buttons on hover */
.layer-list button:hover {
    border-radius: 5%;
    background-color: var(--countyTheme);
    color: var(--titleTextColor);
  }
  
  /* Create an active/current tablink class */
.layer-list button.active {
    background-color: #ccc;
  }
  
  /* Style the tab content */
.tabcontent {
    display: none;
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-top: none;
  }

/* END CSS FOR LAYER LIST  */

/* CSS FOR FORM */

.form-main {
    height: 100%;
    width: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    margin-right: 5%;
}

.form-header {
    margin: 0 auto;
    text-align: center;
    display: flex;
    gap: 2%;
}

.container {
  width: 80%;
  max-width: 1200px;
  margin: 0 auto;
}

.container * {
  box-sizing: border-box;
}

.flex-outer,
.flex-inner {
  list-style-type: none;
  padding: 0;
}

.flex-outer {
  max-width: 800px;
  margin: 0 auto;
}

.flex-outer li,
.flex-inner {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

.flex-inner {
  padding: 0 8px;
  justify-content: space-between;  
}

.flex-outer > li:not(:last-child) {
  margin-bottom: 20px;
}

.flex-outer li label,
.flex-outer li p {
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  padding: 8px;
  font-weight: 300;
  letter-spacing: .09em;
  text-transform: uppercase;
}

.flex-outer > li > label,
.flex-outer li p {
  flex: 1 0 120px;
  max-width: 220px;
}

.flex-outer > li > label + *,
.flex-inner {
  flex: 1 0 220px;
}

.flex-outer li p {
  margin: 0;
}

.flex-outer li input:not([type='checkbox']),
.flex-outer li textarea {
  padding: 15px;
  border: none;
}

.flex-outer li button {
  margin-right: auto;
  padding: 8px 16px;
  border: none;
  background: var(--countyTheme);
  color: #f2f2f2;
  text-transform: uppercase;
  letter-spacing: .09em;
  border-radius: 2px;
  cursor: pointer;
}

.flex-inner li {
  width: 100px;
}

input, textarea {
    -webkit-transition: all 0.30s ease-in-out;
    -moz-transition: all 0.30s ease-in-out;
    -ms-transition: all 0.30s ease-in-out;
    -o-transition: all 0.30s ease-in-out;
    outline: none;
    padding: 3px 0px 3px 3px;
    margin: 5px 1px 3px 0px;
    border: 1px solid #DDDDDD;
  }
   
  input:focus, textarea:focus {
    box-shadow: 0 0 5px var(--countyTheme);
    padding: 3px 0px 3px 3px;
    margin: 5px 1px 3px 0px;
    border: 1px solid var(--countyTheme);
  }

  textarea {
    resize: none;
  }

/* END CSS FOR FORM */

.footer-container {
    height: 3%;
    background-color: var(--countyTheme);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--titleTextColor);
}

/* CSS FOR MODAL */

/* .modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } */


.modal {
    /* This way it could be display flex or grid or whatever also. */
    
    /* Probably need media queries here */
    width: 25%;
    /* max-width: 100%; */
    
    height: 20%;
    /* max-height: 100%; */
    
    position: absolute;
    
    /* z-index: 100; */
    
    left: 35%;
    top: 50%;
    
    /* Use this for centering if unknown width/height */
    transform: translate(-50%, -50%);
    
    /* If known, negative margins are probably better (less chance of blurry text). */
    /* margin: -200px 0 0 -200px; */
    
    background-color: white;
    box-shadow: 0 0 60px 10px rgba(0, 0, 0, 0.9);
    border-radius: 3%;
  }
.closed {
    display: none;
  }
  

.modal-guts {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    padding: 20px 50px 20px 20px;
    gap: 5%;
  }

  #closeButton {
    width: 25%;
    margin-left: 50%;
  }
  
  /* END CSS FOR MODAL */

  @media only screen and (max-height: 800px) {
    .flex-outer > li:not(:last-child) {
      margin-bottom: 5px;
    }
    .enable-draw > button {
      top: 50%;
    }

    #info {
      top: 30%;
      font-size: 0.7rem;
    }

  }


@media only screen and (max-width: 700px) {
  .enable-draw > button {
    top: 45%;
  }
} 


label {
  font-size: 0.8rem;
  font-weight: bold;
}